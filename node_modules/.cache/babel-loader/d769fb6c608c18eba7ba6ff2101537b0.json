{"ast":null,"code":"var _jsxFileName = \"/Users/junming/Documents/reactgeo/my-app/src/App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction componentDidMount() {\n  //console.clear();\n  if (\"geolocation\" in navigator) {\n    console.log(\"Available\");\n  } else {\n    console.log(\"Not Available\");\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    componentDidMount();\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Using geolocation JavaScript API in React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\nexport default App;","map":{"version":3,"sources":["/Users/junming/Documents/reactgeo/my-app/src/App.js"],"names":["React","Component","render","componentDidMount","navigator","console","log","App","constructor","props","state","geolocation","getCurrentPosition","position","coords","latitude","longitude","document","getElementById"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,SAASC,iBAAT,GAA6B;AAC3B;AACA,MAAI,iBAAiBC,SAArB,EAAgC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;;AAED,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAE1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBN,IAAAA,iBAAiB;AACjB,UAAMM,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAED;;AAGDP,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACO,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DR,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,QAAQ,CAACC,MAAT,CAAgBC,QAA7C;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,QAAQ,CAACC,MAAT,CAAgBE,SAA9C;AAED,KAJD;AAMD;;AAGDd,EAAAA,MAAM,GAAG;AAEP,wBAEE;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAUD;;AAhCyB;;AAqC5BA,MAAM,eAAC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAUe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN;AAEA,eAAeX,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nfunction componentDidMount() {\n  //console.clear();\n  if (\"geolocation\" in navigator) {\n    console.log(\"Available\");\n  } else {\n    console.log(\"Not Available\");\n  }\n}\n\nclass App extends Component {\n  \n  constructor(props) {\n    componentDidMount();\n    super(props);\n    this.state = {\n    };\n  }\n\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n\n    });\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <h4>Using geolocation JavaScript API in React</h4>\n\n      </div>\n\n    );\n\n  }\n\n}\n\n\nrender(<App />, document.getElementById(\"root\"));\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}